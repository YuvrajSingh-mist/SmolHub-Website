name: Refresh Models from Implementation Repository

on:
  # Allow manual triggering
  workflow_dispatch:
  
  # Run weekly on Sundays at 00:00 UTC
  schedule:
    - cron: '0 0 * * 0'
  
  # Run when Implementation repo is updated (if you add webhook)
  repository_dispatch:
    types: [refresh-models]

jobs:
  refresh-models:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout portfolio repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        
    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install requests
        
    - name: Update models from GitHub API and regenerate all markdown files
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "🔍 Checking for new models in Implementation repository..."
        echo "📥 Fetching latest data from GitHub API..."
        python update_models.py --fetch --github-token $GITHUB_TOKEN
        echo "🔄 Regenerating all model markdown files with guidelines..."
        echo "  ✅ Using model-implementation layout (not paper-replication)"
        echo "  ✅ Converting all images to raw.githubusercontent.com URLs"
        echo "  ✅ Using exact GitHub API data and real commit dates"
        echo "  ✅ Proper 'From Scratch Implementation' approach"
        echo "  ✅ Standardized frontmatter and content structure"
        python regenerate_models.py
        echo "� Running comprehensive standardization..."
        python standardize_markdowns.py
        echo "🔍 Validating all guidelines are followed..."
        python validate_guidelines.py
        echo "🎉 All model files generated following latest guidelines!"
        
        
    - name: Check for changes
      id: verify-changed-files
      run: |
        if [ -n "$(git status --porcelain)" ]; then
          echo "changed=true" >> $GITHUB_OUTPUT
        else
          echo "changed=false" >> $GITHUB_OUTPUT
        fi
    
    - name: Commit and push changes
      if: steps.verify-changed-files.outputs.changed == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "🤖 Auto-refresh models from implementation repository"
        git push    - name: Clean up temporary files
      run: |
        rm -rf temp_paper_replications
        
    - name: Commit and push changes
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add _models/
        if git diff --staged --quiet; then
          echo "No changes to commit"
        else
          git commit -m "🤖 Auto-update models from Paper-Replications repository"
          git push
        fi
