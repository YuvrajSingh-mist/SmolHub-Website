name: Update SmolHub Playground

# Permissions needed for the workflow
permissions:
  contents: write
  pull-requests: write

on:
  # Run daily at 9 AM UTC to check for changes in SmolHub repo
  schedule:
    - cron: '0 9 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Run when SmolHub related files are updated
  push:
    paths:
      - '_data/smolhub_playground.json'
      - 'generate-smolhub-data.js'
      - 'generate-smolhub-markdowns.py'
      - '_smolhub/*.md'

jobs:
  update-smolhub-playground:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'

    - name: Install Python dependencies
      run: |
        pip install requests pyyaml python-frontmatter

    - name: Install Node.js dependencies
      run: |
        npm install

    - name: Check for changes in SmolHub repository
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "🔍 Checking for new projects in SmolHub repository..."
        echo "  📂 Repository: YuvrajSingh-mist/SmolHub"
        echo "  🎯 Target: SmolHub Playground tab"
        echo "  🎮 Detecting experimental projects and proof-of-concepts"
        echo "  📋 Auto-scanning project directories..."
        echo "  ✅ Following SmolHub playground approach"

    - name: Generate SmolHub data
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "📊 Generating SmolHub playground data..."
        echo "  - Scanning SmolHub repository structure"
        echo "  - Extracting project metadata and README content"
        echo "  - Updating smolhub_playground.json"
        node generate-smolhub-data.js

    - name: Update SmolHub playground data
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "🔄 Updating SmolHub playground projects..."
        echo "  - Processing project descriptions"
        echo "  - Extracting tags and categories"
        echo "  - Updating GitHub creation dates"
        python generate-smolhub-markdowns.py

    - name: Fetch GitHub dates for SmolHub projects
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "📅 Fetching GitHub creation dates for SmolHub projects..."
        python fetch_github_dates.py --source smolhub

    - name: Validate SmolHub playground
      run: |
        echo "🔍 Validating SmolHub playground projects..."
        echo "  - Checking project structure"
        echo "  - Validating markdown frontmatter"
        echo "  - Ensuring playground guidelines compliance"
        python validate_smolhub.py

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "No changes detected"
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        
        # Pull latest changes first to avoid conflicts
        git pull origin master --rebase || {
          echo "⚠️ Rebase conflicts detected, trying merge strategy"
          git rebase --abort 2>/dev/null || true
          git pull origin master --no-rebase
        }
        
        git add .
        git commit -m "🎮 Auto-update SmolHub Playground - $(date +'%Y-%m-%d %H:%M:%S')" || {
          echo "⚠️ Nothing to commit or commit failed"
          exit 0
        }
        
        # Try to push, with retry logic
        for i in {1..3}; do
          if git push; then
            echo "✅ Push successful on attempt $i"
            break
          else
            echo "⚠️ Push failed on attempt $i, pulling latest changes..."
            git pull origin master --rebase
            if [ $i -eq 3 ]; then
              echo "❌ Failed to push after 3 attempts"
              exit 1
            fi
          fi
        done

    - name: Create Pull Request on significant changes
      if: steps.changes.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "🎮 Auto-update SmolHub Playground - $(date +'%Y-%m-%d')"
        title: "🎮 Auto-update: SmolHub Playground Projects"
        body: |
          ## 🎮 Automated SmolHub Playground Update
          
          This PR contains automated updates to the **SmolHub Playground** section:
          
          ### 📊 Changes Made:
          - ✅ Scanned SmolHub repository for new experimental projects
          - 📅 Updated GitHub creation dates for projects
          - 📝 Generated/updated markdown files for playground projects
          - 🏷️ Extracted and updated project tags and categories
          - 🔍 Validated SmolHub playground guidelines compliance
          
          ### 🎯 Repository Source:
          - **Repository**: `YuvrajSingh-mist/SmolHub`
          - **Target Section**: SmolHub Playground tab
          - **Content Type**: Experimental projects, proof-of-concepts, AI experiments
          
          ### 🎮 Project Types Detected:
          - Small-scale models
          - Proof-of-concepts
          - Fun AI experiments
          - Learning projects
          - Rapid prototypes
          
          ### 🤖 Automation Details:
          - Triggered by: SmolHub repository monitoring
          - Timestamp: $(date +'%Y-%m-%d %H:%M:%S UTC')
          - Workflow: `.github/workflows/update-smolhub-playground.yml`
          - Data file: `_data/smolhub_playground.json`
          
          ### 🔧 Technical Updates:
          - Updated project metadata and descriptions
          - Refreshed README content extraction
          - Synchronized tags for search functionality
          - Validated all playground project formats
          
          ---
          *This PR was automatically created by the SmolHub repository monitoring workflow.*
        branch: auto-update-smolhub-playground
        delete-branch: true
