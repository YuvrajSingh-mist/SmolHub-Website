name: Update Paper Replications (From Scratch)

# Permissions needed for the workflow
permissions:
  contents: write
  pull-requests: write

on:
  # Run daily at 8 AM UTC to check for changes in Paper-Replications repo
  schedule:
    - cron: '0 8 * * *'
  
  # Allow manual trigger
  workflow_dispatch:
  
  # Run when paper replication related files are updated
  push:
    paths:
      - '_data/models.json'
      - 'auto_detect_models.py'
      - 'generate_model_files.py'
      - '_models/*.md'

jobs:
  update-paper-replications:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9'

    - name: Install dependencies
      run: |
        pip install requests pyyaml python-frontmatter

    - name: Check for changes in Paper-Replications repository
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "🔍 Checking for new models in Paper-Replications repository..."
        echo "  📂 Repository: YuvrajSingh-mist/Paper-Replications"
        echo "  🎯 Target: From Scratch Implementations tab"
        echo "  ✅ Using model-implementation layout (not paper-replication)"
        echo "  📋 Auto-detecting new model directories..."
        echo "  ✅ Following 'From Scratch Implementation' approach"
        
        # Auto-detect new models from Paper-Replications repo
        python auto_detect_models.py --source paper-replications || {
          echo "❌ Auto-detection failed with exit code $?"
          exit 1
        }
        echo "✅ Auto-detection completed successfully"

    - name: Update models data from Paper-Replications
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "📊 Updating models.json with Paper-Replications data..."
        python update_models.py --source paper-replications --github-token $GITHUB_TOKEN || {
          echo "⚠️ Update models completed with status $?"
          echo "This may be expected if no updates were needed"
        }

    - name: Fetch GitHub creation dates for new models
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        echo "📅 Fetching GitHub creation dates for Paper-Replications models..."
        python fetch_github_dates.py --source paper-replications || {
          echo "⚠️ Date fetching completed with status $?"
          echo "This may be expected if no updates were needed"
        }

    - name: Generate model markdown files
      run: |
        echo "📝 Generating markdown files for Paper-Replications models..."
        echo "  - Using model-implementation layout"
        echo "  - Converting images to raw.githubusercontent.com URLs" 
        echo "  - Using exact GitHub API data with real commit dates"
        echo "  - Standardized frontmatter and content structure"
        python generate_model_files.py --source paper-replications || {
          echo "⚠️ File generation completed with status $?"
          echo "This may be expected if no updates were needed"
        }

    - name: Standardize markdown files
      run: |
        echo "🔧 Standardizing Paper-Replications markdown files..."
        python standardize_markdowns.py --target models || {
          echo "⚠️ Standardization completed with status $?"
          echo "This may be expected if no updates were needed"
        }

    - name: Validate Paper-Replications guidelines
      run: |
        echo "🔍 Validating that all Paper-Replications follow guidelines..."
        python validate_guidelines.py --source paper-replications || {
          echo "⚠️ Validation completed with status $?"
          echo "Some validation issues may exist but workflow continues"
        }

    - name: Check for changes
      id: changes
      run: |
        if git diff --quiet; then
          echo "No changes detected"
          echo "changes=false" >> $GITHUB_OUTPUT
        else
          echo "Changes detected"
          echo "changes=true" >> $GITHUB_OUTPUT
        fi

    - name: Commit and push changes
      if: steps.changes.outputs.changes == 'true'
      run: |
        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git add .
        git commit -m "🚀 Auto-update Paper-Replications (From Scratch) - $(date +'%Y-%m-%d %H:%M:%S')"
        git push

    - name: Create Pull Request on significant changes
      if: steps.changes.outputs.changes == 'true'
      uses: peter-evans/create-pull-request@v5
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        commit-message: "🚀 Auto-update Paper-Replications (From Scratch) - $(date +'%Y-%m-%d')"
        title: "🚀 Auto-update: Paper-Replications (From Scratch Implementations)"
        body: |
          ## 🚀 Automated Paper-Replications Update
          
          This PR contains automated updates to the **From Scratch Implementations** section:
          
          ### 📊 Changes Made:
          - ✅ Scanned Paper-Replications repository for new models
          - 📅 Updated GitHub creation dates
          - 📝 Generated/updated markdown files with model-implementation layout
          - 🔧 Standardized all markdown formatting
          - 🔍 Validated compliance with guidelines
          
          ### 🎯 Repository Source:
          - **Repository**: `YuvrajSingh-mist/Paper-Replications`
          - **Target Section**: From Scratch Implementations tab
          - **Layout**: model-implementation (not paper-replication)
          
          ### 🤖 Automation Details:
          - Triggered by: Paper-Replications repository monitoring
          - Timestamp: $(date +'%Y-%m-%d %H:%M:%S UTC')
          - Workflow: `.github/workflows/update-paper-replications.yml`
          
          ---
          *This PR was automatically created by the Paper-Replications monitoring workflow.*
        branch: auto-update-paper-replications
        delete-branch: true
